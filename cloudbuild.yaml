steps:

  # Build the Docker image for the backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA', '.']
    secretEnv: ['SERVICE_ACCOUNT_KEY']

  # Verify the image was built and tagged correctly
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'images', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA' ]

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA' ]

  # Deploy the image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run',
      'deploy',
      '$REPO_NAME',
      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA',
      '--region', 'us-central1'
    ]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/SERVICE_ACCOUNT_KEY/versions/latest
      env: 'SERVICE_ACCOUNT_KEY'

images:
  # Specify the Docker image to be pushed to Artifact Registry
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY